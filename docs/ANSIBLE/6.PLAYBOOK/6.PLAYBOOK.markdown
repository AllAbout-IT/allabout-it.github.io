---
layout: default
title:  06. PLAYBOOK
parent: ANSIBLE
has_children: true
nav_order: 1006
# permalink: /docs/PROJECT
---

# PLAYBOOK

{:no_toc }

<details open markdown="block">  
  <summary>
    Table of contents
  </summary>
  {: .text-delta }
1. TOC  
{:toc}
</details>

## Definition

The Ansible Playbook is a configuration management tool used for system configuration and deployment automation in Ansible. It is defined in YAML format and each step uses modules to perform the necessary tasks. Ansible Playbooks have the following features:

* Each task is composed of a module and its corresponding parameters.
They use a declarative configuration management approach that allows users to define the desired configuration state of the system.

* Users can easily track and manage system configuration changes, and automate repetitive tasks using Playbooks.

* Playbooks are composed of host group specifications, variables to be used, and tasks to be performed.

* They support advanced features such as variables, control structures, loops, conditional statements, and filtering.

* Playbooks are highly flexible and can be used in a variety of operating systems and cloud environments.

* Playbooks are one of the main features of Ansible and provide a powerful solution for system configuration and deployment automation, when used in conjunction with Ansible's other features.

## Playbook by using YAML in ANSIBLE

{: .highlight}  
YAML: YAML Ain't Markup Language  
What It Is
  YAML is a human-friendly data serialization
  language for all programming languages
  
Ansible Playbook is a tool used for configuration management, application deployment, and task automation. It uses YAML, a human-readable data serialization language, for its configuration files. YAML's clear structure and use of indentation make Playbooks easily readable, while its annotation feature helps others understand them. YAML is also concise, making it easy to write and modify Playbooks quickly. It is highly scalable and can easily combine with other file formats, allowing users to define their own data types. Additionally, YAML has built-in validation rules that ensure the validity of data, preventing incorrect syntax and data from being included. Most importantly, Ansible Playbook supports idempotence, which means that performing the same task multiple times will always result in the same outcome. This characteristic makes Ansible Playbook safe to execute and ensures that the system remains in a predictable state.

### Readability

YAML provides a clear structure and hierarchical representation using indentation, making the written Playbook easy to read. In addition, YAML supports comment functionality to enable others to easily understand the written Playbook.

### Conciseness

Compared to other formats like XML or JSON, YAML requires fewer characters to write code. This allows for fast creation and modification of the written Playbook.

### Scalability

YAML easily integrates with other file formats, allowing for the inclusion or importation of other data into the Playbook. Users can also define their own data types as needed.

### Flexibility

YAML supports arrays, maps, and basic data types, and can combine multiple data types. This allows for easy modification and extension of the Playbook configuration.

### Stability

YAML has built-in rules for validating data, ensuring that the written Playbook provides predictable results and preventing syntax or data errors. Additionally, Ansible Playbook supports idempotence, which guarantees that the same task will always produce the same result, maintaining the system in a predictable state.

### Idempotence

One of the important features of Ansible Playbook is its support for idempotence. Idempotence means that the same task will always produce the same result, even if it is executed multiple times. This ensures safe execution of Ansible Playbook and maintains the system in a predictable state.

* The case of without Idempotence
![1](/docs/ANSIBLE/6.PLAYBOOK/pics/1.png)
* The case of include Idempotence


### Method to define YAML in Ansible
